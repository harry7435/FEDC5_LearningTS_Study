// Write your createCodeCracker function here! âœ¨
// You'll need to export it so the tests can run it.

// An object with the following properties:
// attempts: How many code cracking attempts should be made
// makeGuess: A function that has...
// Parameters:
// text: Any string
// attempt: Which number attempt is happening
// Return: A string to use as a guess
// validateGuess: A function that has...
// Parameters:
// guess: Any string
// Return: Whether the guess was correct
// Return: a function with:

// Parameters:
// text: Any string
// Return: The first guess generated by calling makeGuess where validateGuess returned true, or undefined if none ever did

type CodeCracker = {
	attempts: number;
	makeGuess: (text: string, attempt: number) => string;
	validateGuess: (guess: string) => boolean;
};

export function createCodeCracker({
	attempts,
	makeGuess,
	validateGuess,
}: CodeCracker) {
	return (text: string) => {
		for (let i = 0; i < attempts; i++) {
			const guess = makeGuess(text, i);
			if (validateGuess(guess)) {
				return guess;
			}
		}
		return undefined;
	};
}
